{"version":3,"sources":["components/Tile.js","components/Board.js","components/RightSide.js","components/Bottom.js","components/LeftSide.js","components/Game.js","components/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["Tile","props","state","hidden","onClick","bind","this","updateScore","val","setState","className","disabled","React","Component","Board","tileItem","num","concat","toString","key","vals","ids","map","RightSide","createBox","totals","numZeros","Bottom","LeftSide","score","lvl","Game","id","boardVals","createBoardValues","i","j","nextLvl","newVals","localData","require","twos","threes","zeros","used","curr","Math","floor","random","includes","push","console","log","currZeros","newZeros","currTotals","newScore","Homepage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2781893b.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Tile.css'\n\nclass Tile extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hidden: true\n        }\n        this.onClick = this.onClick.bind(this);\n    }\n\n    componentDidMount() {\n        // console.log(this.props.val)\n    }\n\n    onClick() {\n        if (this.state.hidden) {\n            this.props.updateScore(this.props.val);\n            this.setState({\n                hidden: !this.state.hidden\n            })\n        }\n        // console.log(this.state.hidden)\n    }\n    \n\n    render() {\n        return(\n            <div className=\"tileButton\">\n                {this.state.hidden ? <button className='tile_button' onClick={this.onClick}>?</button> \n                                : <button className='tile_button' disabled>{this.props.val}</button>}\n            </div>\n        )\n    }\n}\n\nexport default Tile;","import React from 'react';\nimport Tile from './Tile';\nimport '../styles/Board.css'\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.tileItem = this.tileItem.bind(this);\n    }\n\n    // componentDidUpdate(){\n    //     console.log(this.props.ids);\n    // }\n\n    tileItem(num) {\n        return <div className={'tile'.concat(num.toString())} key = {num}>\n                    <Tile val={this.props.vals[num]} updateScore={this.props.updateScore}/>\n                </div>\n    }\n\n    render() {\n        return(\n            <div className=\"board-container\">\n                {this.props.ids.map(num =>\n                        this.tileItem(num))}\n            </div>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport '../styles/RightSide.css'\n\n\nclass RightSide extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.createBox = this.createBox.bind(this);\n    }\n\n    createBox(num) {\n        return <div>{num}</div>\n    }\n\n    render() {\n        return(\n            <div className='rightSide-container'>\n                <div className='right'>\n                    <div className='rMultTotal'>\n                        {this.props.totals[0]}\n                    </div>\n                    <div className='rPic'>\n                        V\n                    </div>\n                    <div className='rVoltorbs' >\n                        {this.props.numZeros[0]}\n                    </div>\n                </div>\n\n\n                <div className='right1'>\n                    <div className='r1MultTotal'>\n                        {this.props.totals[1]}\n                    </div>\n                    <div className='r1Pic'>\n                        V\n                    </div>\n                    <div className='r1Voltorbs'>\n                        {this.props.numZeros[1]}\n                    </div>\n                </div>\n                <div className='right2'>\n                    <div className='r2MultTotal'>\n                        {this.props.totals[2]}\n                    </div>\n                    <div className='r2Pic'>\n                        V\n                    </div>\n                    <div className='r2Voltorbs'>\n                        {this.props.numZeros[2]}\n                    </div>\n                </div>\n                <div className='right3'>\n                    <div className='r3MultTotal'>\n                        {this.props.totals[3]}\n                    </div>\n                    <div className='r3Pic'>\n                        V\n                    </div>\n                    <div className='r3Voltorbs'>\n                        {this.props.numZeros[3]}\n                    </div>\n                </div>\n                <div className='right4'>\n                    <div className='r4MultTotal'>\n                        {this.props.totals[4]}\n                    </div>\n                    <div className='r4Pic'>\n                        V\n                    </div>\n                    <div className='r4Voltorbs'>\n                        {this.props.numZeros[4]}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RightSide;","import React from 'react';\nimport '../styles/Bottom.css'\n\nclass Bottom extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return(\n            <div className='bottom-container'>\n                <div className='bot'>\n                    <div className='bMultTotal'>\n                        {this.props.totals[5]}\n                    </div>\n                    <div className='bPic'>\n                        V\n                    </div>\n                    <div className='bVoltorbs'>\n                        {this.props.numZeros[5]}\n                    </div>\n                </div>\n                <div className='bot1'>\n                    <div className='b1MultTotal'>\n                        {this.props.totals[6]}\n                    </div>\n                    <div className='b1Pic'>\n                        V\n                    </div>\n                    <div className='b1Voltorbs'>\n                        {this.props.numZeros[6]}\n                    </div>\n                </div>\n                <div className='bot2'>\n                    <div className='b2MultTotal'>\n                        {this.props.totals[7]}\n                    </div>\n                    <div className='b2Pic'>\n                        V\n                    </div>\n                    <div className='b2Voltorbs'>\n                        {this.props.numZeros[7]}\n                    </div>\n                </div>\n                <div className='bot3'>\n                    <div className='b3MultTotal'>\n                        {this.props.totals[8]}\n                    </div>\n                    <div className='b3Pic'>\n                        V\n                    </div>\n                    <div className='b3Voltorbs'>\n                        {this.props.numZeros[8]}\n                    </div>\n                </div>\n                <div className='bot4'>\n                    <div className='b4MultTotal'>\n                        {this.props.totals[9]}\n                    </div>\n                    <div className='b4Pic'>\n                        V\n                    </div>\n                    <div className='b4Voltorbs'>\n                        {this.props.numZeros[9]}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Bottom;","import React from 'react';\nimport '../styles/LeftSide.css'\n\nclass LeftSide extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return(\n            <div className=\"leftSide-container\">\n                <div className=\"score\">\n                    Score: {this.props.score}\n                </div>\n                <div className=\"level\">\n                    Level: {this.props.lvl}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LeftSide;","import React from 'react';\nimport '../styles/Game.css';\nimport Board from './Board';\nimport RightSide from './RightSide';\nimport Bottom from './Bottom';\nimport LeftSide from './LeftSide';\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            lvl : 0,\n            id: [],\n            boardVals : [],\n            numZeros: [],\n            totals: [],\n            score: 1\n        }\n        this.createBoardValues = this.createBoardValues.bind(this);\n        this.updateScore = this.updateScore.bind(this);\n    }\n\n    createBoardValues() {\n        const nextLvl = this.state.lvl + 1;\n        var ids = [];\n        var newVals = [];\n        var i, j;\n        const max = 25;\n        for (i = 0; i < max; i++) {\n            ids[i] = i;\n            newVals[i] = 1;\n        }\n        switch (nextLvl) {\n            case 1: /* lvl1 test case */\n                var localData = require('../data/boardValues.json')\n                var twos = localData[\"levelOne\"][0]\n                var threes = localData[\"levelOne\"][1]\n                var zeros = localData[\"levelOne\"][2]\n                var used = [];\n                var curr = 0;\n                for (i = 0; i < zeros; i++){\n                    curr = Math.floor(Math.random() * Math.floor(max));\n                    while (used.includes(curr)){\n                        curr = Math.floor(Math.random() * Math.floor(max));\n                    }\n                    used.push(curr);\n                    newVals[curr] = 0;\n                }\n                for (i = 0; i < threes; i++){\n                    curr = Math.floor(Math.random() * Math.floor(max));\n                    while (used.includes(curr)){\n                        curr = Math.floor(Math.random() * Math.floor(max));\n                    }\n                    used.push(curr);\n                    newVals[curr] = 3;\n                }\n                for (i = 0; i < twos; i++){\n                    curr = Math.floor(Math.random() * Math.floor(max));\n                    while (used.includes(curr)){\n                        curr = Math.floor(Math.random() * Math.floor(max));\n                    }\n                    used.push(curr);\n                    newVals[curr] = 2;\n                }\n                // console.log(newVals);\n                // console.log(ids);\n                break;\n            case 2:\n                break;\n            default:\n                console.log('default')\n        }\n        \n        var currZeros = 0;\n        var newZeros = [];\n        var totals = [];\n        var currTotals = 0;\n        for (i = 0; i < 5; i++){\n            for (j = 0; j < 5; j++){\n                if (newVals[((5*i)+j)] === 0){\n                    currZeros += 1;\n                }\n                else {\n                    currTotals += newVals[((5*i)+j)];\n                }\n            }\n            newZeros.push(currZeros);\n            currZeros = 0;\n            totals.push(currTotals)\n            currTotals = 0;\n        }\n        for (i = 0; i < 5; i++){\n            for (j = 0; j < 5; j++){\n                if(newVals[(5*j)+i] === 0){\n                    currZeros += 1;\n                }\n                else {\n                    currTotals += newVals[((5*j)+i)];\n                }\n            }\n            newZeros.push(currZeros);\n            currZeros = 0;\n            totals.push(currTotals);\n            currTotals = 0;\n        }\n        console.log(newZeros);\n        console.log(totals);\n\n\n        // if (nextLvl !== 0) {\n            this.setState((state) => {\n                return {\n                    id: ids,\n                    boardVals: newVals,\n                    numZeros: newZeros,\n                    totals: totals\n                }\n                \n            })\n        // }\n        // console.log(this.state.totals);\n    }\n\n    updateScore(val) {\n        const newScore = this.state.score * val;\n        this.setState({\n            score : newScore\n        })\n    }\n\n    componentDidMount() {\n        this.createBoardValues();\n    }\n\n    render(){\n        return(\n            <div className=\"game-container\">\n                <h1 className=\"top\">\n                    Voltorb Flip\n                </h1>\n                <div className=\"middle\">\n                    <Board ids={this.state.id} vals={this.state.boardVals} updateScore={this.updateScore} totals={this.state.totals} numZeros={this.state.numZeros}/>\n                </div>\n                <div className=\"leftSide\">\n                    <LeftSide score={this.state.score} lvl={this.state.lvl}/>\n                </div>\n                <div className=\"rightSide\">\n                    <RightSide totals={this.state.totals} numZeros={this.state.numZeros}/>\n                </div>\n                <div className=\"bottom\">\n                    <Bottom totals={this.state.totals} numZeros={this.state.numZeros}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Game;","import React from \"react\";\nimport '../styles/Homepage.css';\nimport Game from \"./Game\";\n\nclass Homepage extends React.Component {\n    // constructor(props){\n    //     super(props)\n    // }\n    render(){\n        return(\n            <div className=\"homepage-container\">\n                <Game/>\n            </div>\n        )\n    }\n\n}\n\nexport default Homepage;","import React from 'react';\nimport Homepage from './components/Homepage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}